# Generated by Django 5.0.3 on 2024-04-16 15:24

import datetime
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CropInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='作物名称')),
                ('choice', models.CharField(choices=[('vegetable', '蔬菜'), ('fruit', '水果')], max_length=10, verbose_name='作物类型')),
                ('growth_area', models.CharField(blank=True, max_length=100, null=True, verbose_name='生长区域')),
                ('city', models.CharField(default='必填的城市', max_length=20, verbose_name='种植的城市')),
                ('sowing_season', models.CharField(blank=True, choices=[('spring', '春'), ('summer', '夏'), ('autumn', '秋'), ('winter', '冬')], max_length=10, null=True, verbose_name='播种季节')),
                ('state', models.CharField(blank=True, choices=[('purchased', '已购买'), ('purchase', '未购买')], default='purchase', max_length=10, null=True, verbose_name='购买状态')),
                ('growth_cycle', models.IntegerField(blank=True, default=0, null=True, verbose_name='生长周期')),
                ('purpose', models.CharField(blank=True, choices=[('edible', '食用'), ('watch', '观赏')], max_length=10, null=True, verbose_name='作物用途')),
                ('environment', models.CharField(blank=True, choices=[('indoor', '室内'), ('outdoor', '室外')], max_length=10, null=True, verbose_name='生长环境')),
                ('mature_day', models.IntegerField(default=0, verbose_name='成熟日期')),
                ('image', models.ImageField(blank=True, null=True, upload_to='CropInfoImage', verbose_name='作物图片')),
                ('description', models.CharField(blank=True, max_length=300, null=True, verbose_name='作物描述')),
                ('q_image', models.ImageField(blank=True, null=True, upload_to='CropInfoQImage', verbose_name='作物Q版萌图')),
            ],
            options={
                'verbose_name': '作物基本信息',
                'verbose_name_plural': '作物基本信息',
            },
        ),
        migrations.CreateModel(
            name='Former',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=100, verbose_name='用户名')),
                ('password', models.CharField(max_length=100, verbose_name='密码')),
                ('gender', models.CharField(blank=True, choices=[('M', '男性'), ('F', '女性'), ('O', '其他')], max_length=1, null=True, verbose_name='性别')),
                ('phone', models.CharField(blank=True, default='123', max_length=11, null=True, verbose_name='手机号')),
                ('area', models.CharField(blank=True, default='无', max_length=50, null=True, verbose_name='所在地区')),
                ('nickname', models.CharField(blank=True, max_length=10, null=True, verbose_name='昵称')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatar', verbose_name='头像')),
                ('bio', models.CharField(blank=True, max_length=300, null=True, verbose_name='简介')),
                ('create_time', models.DateTimeField(default=datetime.datetime(2024, 4, 16, 23, 24, 45, 824005), verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '农民管理',
                'verbose_name_plural': '农民管理',
            },
        ),
        migrations.CreateModel(
            name='GrowRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weather', models.CharField(blank=True, max_length=10, null=True, verbose_name='天气状况')),
                ('record_date', models.DateField(verbose_name='记录日期')),
                ('temperature', models.DecimalField(decimal_places=2, default=0, max_digits=8, verbose_name='天气温度')),
                ('temperature_color', models.CharField(choices=[('green', '绿色'), ('yellow', '黄色'), ('red', '红色'), ('black', '黑色'), ('white', '白色')], default='green', max_length=10, verbose_name='天气温度颜色')),
                ('air_humidity', models.DecimalField(decimal_places=2, default=0, max_digits=8, verbose_name='空气湿度')),
                ('air_humidity_color', models.CharField(choices=[('green', '绿色'), ('yellow', '黄色'), ('red', '红色'), ('black', '黑色'), ('white', '白色')], default='green', max_length=10, verbose_name='空气湿度颜色')),
                ('soil_ph', models.DecimalField(decimal_places=2, default=0, max_digits=8, verbose_name='土壤酸碱性')),
                ('soil_ph_color', models.CharField(choices=[('green', '绿色'), ('yellow', '黄色'), ('red', '红色'), ('black', '黑色'), ('white', '白色')], default='green', max_length=10, verbose_name='土壤酸碱性颜色')),
                ('soil_moisture', models.DecimalField(decimal_places=2, default=0, max_digits=8, verbose_name='土壤湿度')),
                ('soil_moisture_color', models.CharField(choices=[('green', '绿色'), ('yellow', '黄色'), ('red', '红色'), ('black', '黑色'), ('white', '白色')], default='green', max_length=10, verbose_name='土壤湿度颜色')),
                ('pest_status', models.CharField(choices=[('healthy', '健康'), ('poisonous', '少量害虫骚扰'), ('dangerous', '危险'), ('dead', '死亡'), ('unknown', '未知')], default='healthy', max_length=10, verbose_name='病虫害状态')),
                ('co2_level', models.DecimalField(decimal_places=2, default=0, max_digits=8, verbose_name='当前作物的二氧化碳浓度')),
                ('co2_level_color', models.CharField(choices=[('green', '绿色'), ('yellow', '黄色'), ('red', '红色'), ('black', '黑色'), ('white', '白色')], default='green', max_length=10, verbose_name='当前作物的二氧化碳浓度颜色')),
                ('photo_morning', models.ImageField(blank=True, null=True, upload_to='record_morning', verbose_name='早晨照片')),
                ('photo_noon', models.ImageField(blank=True, null=True, upload_to='record_noon', verbose_name='中午照片')),
                ('photo_evening', models.ImageField(blank=True, null=True, upload_to='record_evening', verbose_name='晚上照片')),
                ('growth_height', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='生长高度')),
                ('growth_speed', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='生长速度')),
            ],
            options={
                'verbose_name': '生长记录',
                'verbose_name_plural': '生长记录',
                'db_table': 'trip_growrecord',
            },
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='省份名称')),
            ],
            options={
                'verbose_name': '省份',
                'verbose_name_plural': '省份',
            },
        ),
        migrations.CreateModel(
            name='testImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='testImage', verbose_name='图片上传测试')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=100, verbose_name='用户名')),
                ('password', models.CharField(max_length=100, verbose_name='密码')),
                ('gender', models.CharField(blank=True, choices=[('M', '男性'), ('F', '女性'), ('O', '其他')], max_length=1, null=True, verbose_name='性别')),
                ('phone', models.CharField(blank=True, max_length=11, null=True, verbose_name='手机号')),
                ('nickname', models.CharField(blank=True, max_length=10, null=True, verbose_name='昵称')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatar', verbose_name='头像')),
                ('bio', models.CharField(blank=True, max_length=300, null=True, verbose_name='简介')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '用户管理',
                'verbose_name_plural': '用户管理',
            },
        ),
        migrations.CreateModel(
            name='CropInfoImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='CropInfoImage', verbose_name='作物图片')),
                ('crop_info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='trip.cropinfo', verbose_name='作物基本信息')),
            ],
            options={
                'verbose_name': '作物详情照片',
                'verbose_name_plural': '作物详情照片',
            },
        ),
        migrations.AddField(
            model_name='cropinfo',
            name='former',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trip.former', verbose_name='关联的农民'),
        ),
        migrations.CreateModel(
            name='CropCareTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_date', models.DateTimeField(auto_now_add=True, verbose_name='任务建立日期')),
                ('task_water', models.CharField(default='浇水', max_length=10, verbose_name='浇水')),
                ('task_fertilize', models.CharField(default='施肥', max_length=10, verbose_name='施肥')),
                ('task_weed', models.CharField(default='除草', max_length=10, verbose_name='除草')),
                ('task_pest', models.BooleanField(blank=True, default=False, null=True, verbose_name='害虫')),
                ('water_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='浇水次数')),
                ('fertilize_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='施肥次数')),
                ('weed_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='除草次数')),
                ('record', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='care_task', to='trip.growrecord')),
            ],
        ),
        migrations.CreateModel(
            name='GrowRecordImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='GrowRecordImage', verbose_name='照片')),
                ('grow_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='trip.growrecord', verbose_name='生长记录')),
            ],
        ),
        migrations.CreateModel(
            name='OwnedCrop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('buy_date', models.DateTimeField(auto_now_add=True, verbose_name='购买日期')),
                ('growth_stage', models.CharField(choices=[('germination', '发芽期'), ('seedling', '幼苗期'), ('planting', '生长期'), ('flower_and_fruiting', '开花结果期'), ('mature', '成熟期'), ('harvest', '采收期')], max_length=100)),
                ('plant_day', models.IntegerField(default=0, verbose_name='种植天数')),
                ('image', models.ImageField(blank=True, null=True, upload_to='OwnedCropImage', verbose_name='作物图片')),
                ('crop_info', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='owned_crops', to='trip.cropinfo', verbose_name='作物的基本信息')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='owned_crops', to='trip.user', verbose_name='用户的作物')),
            ],
            options={
                'verbose_name': '用户拥有的作物',
                'verbose_name_plural': '用户拥有的作物',
            },
        ),
        migrations.AddField(
            model_name='growrecord',
            name='owned_crop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='records', to='trip.ownedcrop', verbose_name='被记录的作物'),
        ),
        migrations.CreateModel(
            name='EventRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_date', models.DateTimeField(auto_now_add=True, verbose_name='事件时间')),
                ('event_type', models.CharField(max_length=100, verbose_name='事件类型')),
                ('description', models.CharField(blank=True, max_length=300, null=True, verbose_name='事件描述')),
                ('owner_crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_record', to='trip.ownedcrop')),
            ],
        ),
        migrations.CreateModel(
            name='OwnedCropImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='OwnedCropImage', verbose_name='作物图片')),
                ('owned_crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='trip.ownedcrop', verbose_name='用户的作物')),
            ],
            options={
                'verbose_name': '轮播图详情照片',
                'verbose_name_plural': '轮播图详情照片',
            },
        ),
        migrations.CreateModel(
            name='SceneSpot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='景点名称')),
                ('description', models.CharField(blank=True, max_length=300, null=True, verbose_name='景点描述')),
                ('visit_count', models.IntegerField(default=0, verbose_name='访问次数')),
                ('image', models.ImageField(blank=True, null=True, upload_to='SceneImage', verbose_name='景点图片')),
                ('geography_map', models.ImageField(blank=True, null=True, upload_to='geography_map', verbose_name='景点地图')),
                ('background_video', models.FileField(blank=True, null=True, upload_to='video/background_video', verbose_name='背景视频')),
                ('city', models.CharField(db_index=True, max_length=100, verbose_name='所在城市')),
                ('belong_province', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scene_spots', to='trip.province', verbose_name='省份')),
            ],
            options={
                'verbose_name': '景点详情',
                'verbose_name_plural': '景点详情',
            },
        ),
        migrations.CreateModel(
            name='ScenePlantProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='云种植项目名称')),
                ('title', models.CharField(max_length=100, verbose_name='云种植项目标题')),
                ('image', models.ImageField(blank=True, upload_to='SceneCloudPlantImage', verbose_name='云种植项目图片')),
                ('introduce1', models.CharField(default='无', max_length=20, verbose_name='云种植介绍1')),
                ('introduce2', models.CharField(default='无', max_length=20, verbose_name='云种植介绍2')),
                ('introduce3', models.CharField(default='无', max_length=20, verbose_name='云种植介绍3')),
                ('introduce4', models.CharField(default='无', max_length=20, verbose_name='云种植介绍4')),
                ('time', models.DateTimeField(auto_now_add=True, verbose_name='云种植项目发布时间')),
                ('scene_spot', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='plant', to='trip.scenespot', verbose_name='景点关联的云种植项目')),
            ],
        ),
        migrations.CreateModel(
            name='ScenePlacePlay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='实地游玩项目名称')),
                ('title', models.CharField(max_length=100, verbose_name='实地游玩项目标题')),
                ('image', models.ImageField(blank=True, null=True, upload_to='ScenePlacePlay', verbose_name='实地游玩项目图片')),
                ('introduce1', models.CharField(default='无', max_length=20, verbose_name='实地游玩介绍1')),
                ('introduce2', models.CharField(default='无', max_length=20, verbose_name='实地游玩介绍2')),
                ('introduce3', models.CharField(default='无', max_length=20, verbose_name='实地游玩介绍3')),
                ('introduce4', models.CharField(default='无', max_length=20, verbose_name='实地游玩介绍4')),
                ('time', models.DateTimeField(auto_now_add=True, verbose_name='实地游玩项目发布时间')),
                ('scene_spot', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='place_play', to='trip.scenespot', verbose_name='景点关联的实地游玩项目')),
            ],
        ),
        migrations.CreateModel(
            name='SceneImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='SceneImage', verbose_name='景点图片')),
                ('scene_spot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scene_images', to='trip.scenespot', verbose_name='景点')),
            ],
        ),
        migrations.CreateModel(
            name='SceneFood',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='特产名称')),
                ('title', models.CharField(max_length=100, verbose_name='特产标题')),
                ('time', models.DateTimeField(auto_now_add=True, verbose_name='特产发布时间')),
                ('description', models.CharField(max_length=300, verbose_name='特产描述')),
                ('image', models.ImageField(upload_to='SceneFoodImage', verbose_name='特产图片')),
                ('image_detail', models.ImageField(upload_to='SceneFoodImage', verbose_name='特产图片详情')),
                ('scene_spot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scene_foods', to='trip.scenespot', verbose_name='特产关联的景点')),
            ],
        ),
        migrations.CreateModel(
            name='SceneActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='活动名称')),
                ('title', models.CharField(max_length=100, verbose_name='活动标题')),
                ('time', models.DateTimeField(auto_now_add=True, verbose_name='活动发布时间')),
                ('description', models.CharField(max_length=300, verbose_name='活动描述')),
                ('image', models.ImageField(upload_to='SceneActivityImage', verbose_name='活动图片')),
                ('detail_image', models.ImageField(upload_to='SceneActivityImage', verbose_name='活动图片详情')),
                ('scene_spot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scene_activities', to='trip.scenespot', verbose_name='活动关联的景点')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='项目名称')),
                ('description', models.CharField(blank=True, max_length=300, null=True, verbose_name='项目描述')),
                ('image', models.ImageField(blank=True, null=True, upload_to='ProjectImage', verbose_name='项目图片')),
                ('project_type', models.CharField(choices=[('Plant', '云种植'), ('Tour', '实地游玩')], max_length=10, verbose_name='项目类型')),
                ('quantity', models.IntegerField(default=0, verbose_name='项目数量')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=8, verbose_name='项目价格')),
                ('trip_day', models.IntegerField(default=0, verbose_name='游玩天数')),
                ('start_time', models.DateTimeField(auto_now_add=True, verbose_name='项目开始时间')),
                ('start_place', models.CharField(blank=True, max_length=100, null=True, verbose_name='项目起点')),
                ('destination', models.CharField(blank=True, max_length=100, null=True, verbose_name='项目目的地')),
                ('scene_spot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='trip.scenespot', verbose_name='项目关联的景点')),
            ],
            options={
                'verbose_name': '景点项目',
                'verbose_name_plural': '景点项目',
            },
        ),
        migrations.AddField(
            model_name='cropinfo',
            name='scene_spot',
            field=models.ManyToManyField(blank=True, null=True, related_name='crop_info', to='trip.scenespot', verbose_name='作物所属景点'),
        ),
        migrations.CreateModel(
            name='SceneComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=300, verbose_name='评论内容')),
                ('image', models.ImageField(blank=True, null=True, upload_to='CommentImage', verbose_name='评论图片')),
                ('comment_time', models.DateTimeField(auto_now_add=True, verbose_name='评论时间')),
                ('business_comment', models.CharField(blank=True, max_length=300, null=True, verbose_name='商家评论')),
                ('rating', models.IntegerField(default=0, verbose_name='用户评分')),
                ('scene_spot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='trip.scenespot', verbose_name='所属景点')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='trip.user', verbose_name='用户')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='产品名称')),
                ('category', models.CharField(choices=[('fruit', '水果'), ('vegetable', '蔬菜'), ('animal', '禽类')], max_length=10, verbose_name='产品类别')),
                ('description', models.CharField(max_length=300, verbose_name='产品描述')),
                ('price', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='产品价格')),
                ('image', models.ImageField(upload_to='ProductImage', verbose_name='产品图片')),
                ('buy_time', models.DateTimeField(auto_now_add=True, verbose_name='购买时间')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product', to='trip.user', verbose_name='拥有者')),
            ],
            options={
                'verbose_name': '产品',
                'verbose_name_plural': '产品',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', '待处理'), ('confirmed', '已确认'), ('shipped', '已发货'), ('delivered', '已送达'), ('cancelled', '已取消')], default='pending', max_length=10, verbose_name='订单状态')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='订单创建时间')),
                ('former', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='trip.former', verbose_name='订单卖家')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='trip.product', verbose_name='订单所属产品')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='trip.user', verbose_name='订单的用户')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(auto_now_add=True, verbose_name='发送时间')),
                ('content', models.TextField()),
                ('if_read', models.BooleanField(default=False, verbose_name='是否已读')),
                ('receiver_former', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='receive_message', to='trip.former', verbose_name='农户接收')),
                ('sender_former', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='send_message', to='trip.former', verbose_name='农户发送')),
                ('receiver_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='receive_message', to='trip.user', verbose_name='用户接收')),
                ('sender_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='send_message', to='trip.user', verbose_name='用户发送')),
            ],
            options={
                'verbose_name': '聊天记录',
                'verbose_name_plural': '聊天记录',
            },
        ),
        migrations.CreateModel(
            name='UserOperationHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_date', models.DateTimeField(auto_now_add=True, verbose_name='操作时间')),
                ('action_type', models.CharField(max_length=100, verbose_name='操作类型')),
                ('description', models.CharField(blank=True, max_length=300, null=True, verbose_name='操作内容')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='action_history', to='trip.user', verbose_name='用户的操作历史')),
            ],
        ),
    ]
